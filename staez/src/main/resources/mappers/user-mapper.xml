<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace: 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="userMapper">
	<resultMap type="User" id="userResult">
		<result column="user_no" property="userNo" />
		<result column="user_id" property="userId" />
		<result column="user_pwd" property="userPwd" />
		<result column="nickname" property="nickname" />
		<result column="gender" property="gender" />
		<result column="birth" property="birth" />
		<result column="address" property="address" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
		<result column="genre_like" property="genreLike" />
		<result column="grade" property="grade" />
		<result column="enroll_date" property="enrollDate" />
		<result column="withdrawal_date" property="withdrawalDate" />
		<result column="user_status" property="userStatus" />
	</resultMap>
	<resultMap type="java.util.Map" id="emailResult">
	    <result column="email" property="email"/>
	    <result column="authno" property="authNo"/>
	    <result column="send_time" property="sendTime"/>
	</resultMap>

	<select id="test" resultMap="userResult"> <!-- db의 컬럼과 객체의 필드명이 완전히 같다면 resultType사용 가능 -->
		SELECT *
		FROM staez_user <!-- db에 user의 테이블 이름이 staez_user니까 주의 -->
		WHERE user_status = 'Y'
	</select>
	
	<select id="loginUser" resultMap="userResult">
		SELECT 
			user_no,
			user_id,
			user_pwd,
			nickname,
			gender,
			birth,
			address,
			email,
			phone,
			genre_like,
			grade,
			enroll_date,
			withdrawal_date
		FROM staez_user
		WHERE user_id = #{userId}
		AND user_status = 'Y'
	</select>
	
	<!-- 아이디 중복체크 -->
	<select id="idCheck" resultType="int" parameterType="String">
		SELECT COUNT(*)
		FROM staez_user
		WHERE user_id = #{checkId}
	</select>
	
	<!-- 닉네임중복체크 -->
	<select id="checkNick" resultType="_int">
		SELECT COUNT(*)
		  FROM staez_user
		 WHERE nickname = #{checkNick}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertUser">
		INSERT INTO staez_user(
		   user_id,
		   user_pwd,
		   nickname,
		   gender,
		   birth,
		   address,
		   email,
		   phone,
		   genre_like,
		   grade
		)
		VALUES(
		   #{userId},
		   #{userPwd},
		   #{nickname},
		   #{gender},
		   #{birth},
		   #{address},
		   #{email},
		   #{phone},
		   #{genreLike},
		   2
		)
	</insert>
	
	<!-- 네이버 로그인유무 이메일 체크 -->
	<select id="findUserByEmail" parameterType="string" resultType="com.spring.staez.user.model.vo.User">
	    SELECT * 
	    FROM staez_user 
	    WHERE email = #{email}
	</select>
	
	<!-- 이메일 인증번호 저장을 위한 서비스 -->
	<insert id="registerUser" parameterType="com.spring.staez.user.model.vo.User">
    INSERT INTO 
           email_auth(
                      email, 
                      authNo, 
                      send_time
                     )
           VALUES (
                   #{email}, 
                   #{authNo}, 
                   #{send_time})
	</insert>
	
	<!-- 이메일 암호키 인증체크 -->
	<select id="emailSecretCodeCheck" resultType="_int">
		SELECT COUNT(*)
		  FROM email_auth
		 WHERE authNo = #{authNo}
		   AND email = #{email}
		   AND send_time >= CURRENT_TIMESTAMP - INTERVAL '5 minutes';
	</select>
	
	<!-- 이메일로 아이디찾기 -->
	<select id="findEmailCheck" resultType="string">
		SELECT user_id
		  FROM staez_user
		 WHERE email = #{email}
	</select>
	
</mapper>

