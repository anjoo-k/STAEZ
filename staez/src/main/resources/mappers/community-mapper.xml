<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace: 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="communityMapper">
	<resultMap type="Board" id="boardResult">
		<result column="board_no" property="boardNo" />
		<result column="ref_board_no" property="refboardNo" />
		<result column="user_no" property="userNo" />
		<result column="user_Id" property="userId" />
		<result column="nickname" property="nickname" />
		<result column="board_level" property="boardLevel" />
		<result column="board_code" property="boardCode" />
		<result column="board_write_date" property="boardWriteDate" />
		<result column="board_title" property="boardTitle" />
		<result column="board_content" property="boardContent" />
		<result column="board_count" property="boardCount" />
		<result column="board_status" property="boardStatus" />
		<result column="category_no" property="categoryNo" />
		<result column="category_name" property="categoryName" />
		<result column="ref_category_no" property="refCategoryNo" />
		<result column="category_level" property="categoryLevel" />
		<result column="concert_no" property="concertNo" />
		<result column="like_count" property="likeCount" />
		<result column="path" property="path" />
	</resultMap>
	<resultMap type="Category" id="categoryResult">
		<result column="category_no" property="categoryNo"/>
		<result column="ref_category_no" property="refCategoryNo"/>
		<result column="category_name" property="categoryName"/>
		<result column="category_level" property="categoryLevel"/>
	</resultMap>
		<resultMap type="Concert" id="concertResult">
		<result column="concert_no" property="concertNo"/>
		<result column="theater_no" property="theaterNo"/>
		<result column="concert_title" property="concertTitle"/>
		<result column="concert_plot" property="concertPlot"/>
		<result column="concert_runtime" property="concertRuntime"/>
		<result column="concert_members" property="concertMembers"/>
		<result column="concert_production" property="concertProduction"/>
		<result column="age_limit" property="ageLimit"/>
		<result column="update_date" property="updateDate"/>
		<result column="concert_status" property="concertStatus"/>
		<result column="theater_name" property="theaterName"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="file_path" property="filePath" />
		<result column="change_name" property="changeName" />
	</resultMap>
	<resultMap type="Tag" id="tagResult">
		<result column="board_no" property="boardNo"/>
		<result column="concert_no" property="concertNo"/>
	</resultMap>
	<resultMap type="Reply" id="replyResult">
		<result column="reply_no" property="replyNo"/>
		<result column="ref_reply_no" property="refReplyNo"/>
		<result column="board_no" property="boardNo"/>
		<result column="user_no" property="userNo"/>
		<result column="nickname" property="nickname"/>
		<result column="path" property="path"/>
		<result column="reply_content" property="replyContent"/>
		<result column="reply_write_date" property="replyWriteDate"/>
		<result column="reply_status" property="replyStatus"/>
	</resultMap>
	<select id="selectCategory" resultMap="categoryResult">
		SELECT 
			category_no,
			category_name
		FROM category
		WHERE
			ref_category_no = #{refCategoryNo}
			AND category_level = #{categoryLevel}
	</select>
	<select id="selectConcertList" resultMap="concertResult">
		SELECT
			c.concert_no,
			c.concert_title,
			ca.file_path,
			ca.change_name
		FROM concert c
		LEFT JOIN concert_attachment ca ON (c.concert_no = ca.concert_no)
		WHERE concert_title LIKE '%' || #{keyword} || '%'
		ORDER BY c.concert_no DESC
		LIMIT 5
	</select>
	<insert id="insertBoard">
		INSERT INTO board 
		(
			user_no,
			board_title,
			board_content
		) VALUES (
			#{userNo},
			#{boardTitle},
			#{boardContent}
		)
	</insert>
	<insert id="insertCategory">
		INSERT INTO board_category
		(
			board_no,
			category_no
		) values (
			CURRVAL('seq_board'::regclass),
			#{categoryNo}
		)
	</insert>
	<insert id="insertTag">
		INSERT INTO tag
		(
			board_no,
			concert_no
		) values (
			CURRVAL('seq_board'::regclass),
			#{concertNo}
		)
	</insert>
	<select id="selectBoardCnt" resultType="_int">
		SELECT
			COUNT(DISTINCT b.board_no)
		FROM board b
		JOIN board_category bc on (b.board_no = bc.board_no)
		WHERE b.board_status = 'Y'
		AND (b.board_title LIKE '%${keyword}%' OR b.board_content LIKE '%${keyword}%')
		AND b.board_code = 2
		AND 
		<foreach collection="categoryNo" item="item" separator="AND">
			b.board_no IN (SELECT board_no FROM board_category WHERE category_no = #{item})
		</foreach>
	</select>
	<select id="selectBoardCntAll" resultType="_int">
		SELECT
			COUNT(*)
		FROM board b
		WHERE b.board_status = 'Y'
		AND (b.board_title LIKE '%${keyword}%' OR b.board_content LIKE '%${keyword}%')
		AND b.board_code = 2
	</select>
	<select id="selectBoard" resultMap="boardResult">
		SELECT
			b.board_no,
			u.user_no,
			u.nickname,
			b.board_level,
			b.board_write_date,
			b.board_title,
			b.board_content,
			b.board_count
		FROM board b
		JOIN staez_user u on (b.user_no = u.user_no)
		JOIN board_category bc on (b.board_no = bc.board_no)
		WHERE b.board_status = 'Y'
		AND (b.board_title LIKE '%${keyword}%' OR b.board_content LIKE '%${keyword}%')
		AND b.board_code = 2
		AND
		<foreach collection="categoryNo" item="item" separator="AND">
			b.board_no IN (SELECT board_no FROM board_category WHERE category_no = #{item})
		</foreach>
		GROUP BY
			b.board_no,
			u.user_no,
			u.nickname,
			b.board_level,
			b.board_write_date,
			b.board_title,
			b.board_content,
			b.board_count
		ORDER BY b.board_no DESC
	</select>
	<select id="selectBoardAll" resultMap="boardResult">
		SELECT
			b.board_no,
			u.user_no,
			u.nickname,
			b.board_level,
			b.board_write_date,
			b.board_title,
			b.board_content,
			b.board_count
		FROM board b
		JOIN staez_user u on (b.user_no = u.user_no)
		JOIN board_category bc on (b.board_no = bc.board_no)
		WHERE b.board_status = 'Y'
		AND (b.board_title LIKE '%${keyword}%' OR b.board_content LIKE '%${keyword}%')
		AND b.board_code = 2
		GROUP BY
			b.board_no,
			u.user_no,
			u.nickname,
			b.board_level,
			b.board_write_date,
			b.board_title,
			b.board_content,
			b.board_count
		ORDER BY b.board_no DESC
	</select>
	<select id="selectBoardCategory" resultMap="categoryResult">
		SELECT
			c.category_no,
			c.category_name
		FROM board_category bc
		JOIN category c ON (bc.category_no = c.category_no)
		WHERE bc.board_no = #{boardNo}
	</select>
	<select id="boardDetail" resultMap="boardResult">
		SELECT
			b.board_no,
			u.user_no,
			u.nickname,
			b.board_write_date,
			b.board_title,
			b.board_content,
			b.board_count
		FROM board b
		JOIN staez_user u on (b.user_no = u.user_no)
		WHERE b.board_no = ${boardNo}
	</select>
	<select id="selectProfile" resultType="string">
		SELECT file_path || change_name
		FROM profile_img
		WHERE user_no = #{userNo}
	</select>
	<select id="selectUserBoardLike" resultType="_int">
		SELECT COUNT(*)
		FROM board_like
		WHERE board_no = #{boardNo}
		AND user_no = #{userNo}
		AND status = 'Y'
	</select>
	<select id="selectBoardLikeCnt" resultType="_int">
		SELECT COUNT(*)
		FROM board_like
		WHERE board_no = #{boardNo}
		AND status = 'Y'
	</select>
	<select id="selectConcert" resultMap="concertResult">
		SELECT 
			concert_no,
			concert_title
		FROM concert
		WHERE concert_no = #{concertNo}
	</select>
	<select id="selectTag" resultMap="tagResult">
		SELECT
			board_no,
			concert_no
		FROM tag
		WHERE board_no = #{boardNo}
	</select>
	<update id="updateBoard">
		UPDATE board
		SET 
			user_no = #{userNo},
			board_title = #{boardTitle},
			board_content = #{boardContent}
		WHERE board_no = #{boardNo}
	</update>
	<delete id="deleteCategory">
		DELETE FROM board_category
		WHERE board_no = #{boardNo}
	</delete>
	<update id="updateCategory">
		INSERT INTO board_category
		(
			board_no,
			category_no
		) values (
			#{boardNo},
			#{categoryNo}
		)
	</update>
	<update id="updateTag">
		UPDATE tag
		SET concert_no = #{concertNo}
		WHERE board_no = #{boardNo}
	</update>
	<update id="deleteBoard">
		UPDATE board
		SET board_status = 'N'
		WHERE board_no = #{boardNo}
	</update>
	<select id="selectUserBoardLikeAll" resultType="_int">
		SELECT
			COUNT(*)
		FROM board_like
		WHERE board_no = #{boardNo}
		AND user_no = #{userNo}
	</select>
	<update id="updateBoardLike">
		UPDATE board_like
		SET status = #{status}
		WHERE board_no = #{boardNo}
		AND user_no = #{userNo}
	</update>
	<insert id="insertBoardLike">
		INSERT INTO board_like
		(
			board_no,
			user_no
		) VALUES (
			#{boardNo},
			#{userNo}
		)
	</insert>
	<insert id="insertReport">
		INSERT INTO board
		(
			ref_board_no,
			user_no, 
			board_level,
			board_code,
			board_title,
			board_content
		) VALUES (
			#{refBoardNo},
			#{userNo},
			2,
			5,
			#{boardTitle},
			#{boardContent}
		)
	</insert>
	<update id="updateBoardCnt">
		UPDATE board
		SET board_count = board_count + 1
		WHERE board_no = #{boardNo}
	</update>
	<!-- 댓글 -->
	<select id="selectReplyCnt" resultType="_int">
		SELECT COUNT(*)
		FROM reply
		WHERE board_no = #{boardNo}
		AND reply_status = 'Y'
	</select>
	<select id="selectReplyAll" resultMap="replyResult">
		SELECT
			r.reply_no,
			r.ref_reply_no,
			r.user_no,
			u.nickname,
			r.reply_content,
			r.reply_write_date,
			pi.file_path || pi.change_name AS path
		FROM reply r
		LEFT JOIN 
			(SELECT 
				user_no, 
				file_path, 
				change_name 
			FROM profile_img
			WHERE status = 'Y') pi 
		ON (r.user_no = pi.user_no)
		JOIN staez_user u on (r.user_no = u.user_no)
		WHERE r.board_no = #{boardNo}
		AND r.reply_status = 'Y'
		ORDER BY r.reply_no ASC
	</select>
	<insert id="insertReply">
		INSERT INTO reply
		(
			<if test='refReplyNo != 0'>
				ref_reply_no,
			</if>
			board_no,
			user_no,
			reply_content
		) VALUES (
			<if test='refReplyNo != 0'>
				${refReplyNo},
			</if>
			#{boardNo},
			#{userNo},
			#{replyContent}
		)
	</insert>
	<update id="updateReply">
		UPDATE reply
		SET reply_content = #{replyContent}
		WHERE reply_no = #{replyNo}
	</update>
	<update id="deleteReply">
		UPDATE reply
		SET reply_status = 'N'
		WHERE reply_no = #{replyNo}
	</update>
	<select id="selectUserReplyLike" resultType="_int">
		SELECT COUNT(*)
		FROM reply_like
		WHERE reply_no = #{replyNo}
		AND user_no = #{userNo}
		AND status = 'Y'
	</select>
	<select id="selectUserReplyLikeAll" resultType="_int">
		SELECT COUNT(*)
		FROM reply_like
		WHERE reply_no = #{replyNo}
		AND user_no = #{userNo}
	</select>
	<select id="selectReplyLikeCnt" resultType="_int">
		SELECT COUNT(*)
		FROM reply_like
		WHERE reply_no = #{replyNo}
		AND status = 'Y'
	</select>
	<insert id="insertReplyLike">
		INSERT INTO reply_like
		(
			reply_no,
			user_no
		) VALUES (
			#{replyNo},
			#{userNo}
		)
	</insert>
	<update id="updateReplyLike">
		UPDATE reply_like
		SET status = #{status}
		WHERE reply_no = #{replyNo}
		AND user_no = #{userNo}
	</update>
	<select id="selectConcertId" resultType="string">
		SELECT concert_plot
		FROM concert
		WHERE concert_no = #{concertNo}
		AND theater_no IS NULL
	</select>
</mapper>

