<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace: 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="othersMapper">

	<resultMap type="Concert" id="concertResult">
	    <result column="concert_no" property="concertNo"/>
	    <result column="theater_no" property="theaterNo"/>
	    <result column="concert_title" property="concertTitle"/>
	    <result column="concert_plot" property="concertPlot"/>
	    <result column="concert_runtime" property="concertRuntime"/>
	    <result column="concert_members" property="concertMembers"/>
	    <result column="concert_production" property="concertProduction"/>
	    <result column="age_limit" property="ageLimit"/>
	    <result column="update_date" property="updateDate"/>
	    <result column="concert_status" property="concertStatus"/>
	    <result column="change_name" property="changeName"/>
	    <result column="file_path" property="filePath"/>
	    <result column="start_date" property="startDate"/>
	    <result column="end_date" property="endDate"/>
	    <result column="category_no" property="categoryNo"/>
	    <result column="category_name" property="categoryName"/>
	    <result column="theater_name" property="theaterName"/>
   </resultMap>
	
	<resultMap type="Category" id="categoryResult">
 		<result column="category_no" property="categoryNo" />
 		<result column="ref_category_no" property="refCategoryNo" />
 		<result column="category_name" property="categoryName" />
 		<result column="category_level" property="categoryLevel" />
	</resultMap>
	
	<resultMap type="Reserve" id="reserveResult">
		<result column="reserve_no" property="reserveNo" />
		<result column="concert_no" property="concertNo" />
		<result column="user_no" property="userNo" />
		<result column="reserve_row" property="reserveRow" />
		<result column="reserve_col	" property="reserveCol" />
		<result column="reserve_date" property="reserveDate" />
		<result column="pay_method" property="payMethod" />
		<result column="concert_date" property="concertDate" />
		<result column="concert_times" property="concertTimes" />
		<result column="reserve_status" property="reserveStatus" />
	</resultMap>
	
	
	<select id="selectCategory" resultMap="categoryResult">
		select category_no, category_name
		from category
		where ref_category_no = 1
	</select>	
	
	<select id="selectCategoryLikeConcert" resultMap="concertResult">
		select 
			c.concert_no, 
			c.concert_title, 
			l.start_date, 
			l.end_date, 
			cg.category_name
		from (select 
				cl.concert_no, 
				min(cs.start_date) as start_date,
				max(cs.end_date) as end_date,
				count(cl.concert_no) as countlike
				from concert_like cl
				join concert c using (concert_no)
				join concert_schedule cs on (c.concert_no = cs.concert_no)
				where cl.status = 'Y'
				group by cl.concert_no
				order by countlike desc) l
		join concert c on (l.concert_no = c.concert_no)	
		join concert_category cc on (c.concert_no = cc.concert_no)
		join category cg on (cc.category_no = cg.category_no)
		join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_status = 'Y'
		and cg.category_no = #{cNo}
		and ca.status = 'Y'
		limit 10;
	</select>
	
	<select id="selectCategoryConcertImg" resultMap="concertResult">
		select 
			c.concert_no, 
			ca.file_path, 
			ca.change_name
		from (select 
				cl.concert_no, 
				count(cl.concert_no) as countlike
				from concert_like cl
				join concert c using (concert_no)
				where cl.status = 'Y'
				group by cl.concert_no
				order by countlike desc) l
		join concert c on (l.concert_no = c.concert_no)	
		join concert_category cc on (c.concert_no = cc.concert_no)
		join category cg on (cc.category_no = cg.category_no)
		join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_status = 'Y'
		and cg.category_no = #{cNo}
		and ca.status = 'Y'
		limit 10;
	</select>
	
	<select id="selectLatestCategoryConcert" resultMap="concertResult">
		select 
		   c.concert_no, 
		   c.concert_title, 
		   start_date,
		   end_date,
		   cg.category_name
		from (select 
		      c.concert_no,
		      min(cs.start_date) as start_date,
		          max(cs.start_date) as latest,
		      max(cs.end_date) as end_date
		      from concert c
		      join concert_schedule cs using (concert_no)
		      group by c.concert_no
		      order by latest desc) l
		join concert c on (l.concert_no = c.concert_no)   
		join concert_category cc on (c.concert_no = cc.concert_no)
		join category cg on (cc.category_no = cg.category_no)
		join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_status = 'Y'
		and cg.category_no = #{cNo}
		and ca.status = 'Y'
		limit 10;
	</select>
	
	<select id="selectLatestCategoryConcertImg" resultMap="concertResult">
		select 
			c.concert_no, 
			ca.file_path, 
			ca.change_name
		from (select 
				c.concert_no,
			 	max(cs.start_date) latest
				from concert c
				join concert_schedule cs using (concert_no)
				group by c.concert_no
				order by latest desc) l
		join concert c on (l.concert_no = c.concert_no)	
		join concert_category cc on (c.concert_no = cc.concert_no)
		join category cg on (cc.category_no = cg.category_no)
		join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_status = 'Y'
		and cg.category_no = #{cNo}
		and ca.status = 'Y'
		limit 10;
	</select>
	
	<select id="selectDateCategoryConcert" resultMap="concertResult" parameterType="Map">
	select 
		c.concert_no, 
		c.concert_title, 
		t.theater_name, 
		min(s.start_date) start_Date, 
		min(s.end_date) end_date, 
		c.concert_runtime, 
		ca.file_path, 
		ca.change_name, 
		cg.category_no 
	from (select concert_no, start_date, end_Date
			from concert_schedule 
			where #{date}::date between start_date and end_date
			and status = 'Y'
			and schedule != 'N') s
	join concert c on (s.concert_no = c.concert_no)
	join theater t on (c.theater_no = t.theater_no)
	join concert_attachment ca on (c.concert_no = ca.concert_no)
	join concert_category cc on (c.concert_no = cc.concert_no)
	join category cg on (cc.category_no = cg.category_no)
	where cg.category_no = #{cNo}
	and ca.status = 'Y'
	GROUP BY c.concert_no, c.concert_title, t.theater_name, c.concert_runtime, ca.file_path, ca.change_name, cg.category_no;
	</select>
	
	<select id="selectReserveConcert" resultMap="reserveResult">
		select concert_no, concert_date
		from reserve
		where reserve_status = 'Y'
		and user_no = #{uNo}
	</select>
	
	<select id="selectChoiceReserveConcert" resultMap="concertResult" parameterType="Map">
		select 
				c.concert_no, 
				c.concert_title, 
				t.theater_name, 
				min(cs.start_date) start_Date, 
				min(cs.end_date) end_date, 
				c.concert_runtime, 
				ca.file_path, 
				ca.change_name, 
				cg.category_no
		from concert c
		join reserve r on (c.concert_no = r.concert_no)
		join theater t on (c.theater_no = t.theater_no)
		join concert_schedule cs on (c.concert_no = cs.concert_no)
		join concert_attachment ca on (c.concert_no = ca.concert_no)
		join concert_category cc on (c.concert_no = cc.concert_no)
		join category cg on (cc.category_no = cg.category_no)
		where r.user_no = #{uNo}
		and r.reserve_status = 'Y'
		and r.concert_date = #{date}::date
		group by c.concert_no, c.concert_title, t.theater_name,
				c.concert_runtime, ca.file_path, ca.change_name, cg.category_no
	</select>
</mapper>

